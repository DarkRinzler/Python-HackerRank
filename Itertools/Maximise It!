# ===================================
#   Problem statement & information
# ===================================

# You are given a function f(X) = X^2. You are also given K lists. The i-th list consists of N_i elements.
# You have to pick one element from each list so that the value from the equation below is maximized:
# S = (f(X_1) + f(X_2) + ... + f(X_k))%M
# X_i denotes the element picked from the i-th list. Find the maximized value S_max obtained.
# % denotes the modulo operator.

# Difficulty: Hard
# Max Score: 50
# Language: Python

# ===================================
#              Solution
# ===================================

#!/bin/python3

from itertools import product

def get_input() -> tuple:
    num1, num2 = list(map(int, input().split()))
    input_data = [list(map(int, input().split()))[1:] for _ in range(num1)]
    return input_data, num2
    
def equation(arr: tuple) -> list:
    data, M = arr
    pairs = product(*data)
    S_value = []
    for values in pairs:
        S_value.append(sum((x ** 2) % M for x in values) % M)
    return max(S_value)
        
def main() -> None:
    data = get_input()
    print(equation(data))
    
if __name__ == "__main__":
    main()
